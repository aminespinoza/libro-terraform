trigger:
- charlesextension

pool:
  vmImage: ubuntu-latest

stages:
- stage: validate
  jobs:
    - job: Validate
      continueOnError: false
      steps:
      - task: TerraformInstaller@0
        displayName: 'Terraform install'
        inputs:
          terraformVersion: 'latest'
      - task: TerraformCLI@0
        displayName: 'Terraform init'
        inputs:
          command: 'init'
          backendType: 'azurerm'
          backendServiceArm: 'Azure Corp Account (189ad0e9-2814-4280-905d-891d3e2aca06)'
          backendAzureRmResourceGroupName: 'BotsEnvironment'
          backendAzureRmStorageAccountName: 'generastorageamin'
          backendAzureRmContainerName: 'devopslibrotf'
          backendAzureRmKey: 'terraform.tfstate'
      
      - task: TerraformCLI@0
        displayName: 'Terraform validate'
        inputs:
          command: 'validate'
          allowTelemetryCollection: false

      - task: Bash@3
        displayName: 'Terraform format'
        inputs:
          targetType: 'inline'
          script: |
            terraform fmt --recursive
            
            echo Formatting all Terraform files
          workingDirectory: '$(System.DefaultWorkingDirectory)'

- stage: deploy
  jobs:
    - deployment: Terraform_deploy
      continueOnError: false
      environment: 'dev'
      strategy:
       runOnce:
        deploy:
         steps:
           - checkout: self
           - task: TerraformInstaller@0
             inputs:
               terraformVersion: 'latest'
           - task: TerraformCLI@0
             displayName: 'Terraform init'
             inputs:
               command: 'init'
               backendType: 'azurerm'
               backendServiceArm: 'Azure Corp Account (189ad0e9-2814-4280-905d-891d3e2aca06)'
               backendAzureRmResourceGroupName: 'BotsEnvironment'
               backendAzureRmStorageAccountName: 'generastorageamin'
               backendAzureRmContainerName: 'devopslibrotf'
               backendAzureRmKey: 'terraform.tfstate'
          
           - task: DownloadSecureFile@1
             name: varsFile
             displayName: 'Download secure file'
             inputs:
               secureFile: 'terraform.tfvars'

           - task: TerraformCLI@0
             displayName: 'Terraform plan'
             inputs:
               command: 'plan'
               environmentServiceName: 'Azure Corp Account (189ad0e9-2814-4280-905d-891d3e2aca06)'
               commandOptions: '-var-file $(varsFile.secureFilePath)'
               allowTelemetryCollection: false
            
           - task: TerraformCLI@0
             displayName: 'Terraform apply'
             inputs:
               command: 'apply'
               environmentServiceName: 'Azure Corp Account (189ad0e9-2814-4280-905d-891d3e2aca06)'
               commandOptions: '-var-file $(varsFile.secureFilePath)'
               allowTelemetryCollection: false
